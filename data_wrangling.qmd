---
title: "Data wrangling from amplicon sequencing"
author: "Johan S. Sáenz"
format:
  gfm:
    toc: true
    html-math-method: katex
    css: styles.css
    code-fold: show
---

This tutorial would guide you across the data analysis of amplicon sequences obtained from grass ensilaging during 40 days.

![Grass ensilagin in glass jars durion 40 days](data_wrangling_files/IMG_6246.png){fig-align="center" width="187"}

## Setting the working space

First, we need to organize and set up our working environment. You need to create a **project** folder an inside that, you should create **code**, **rawdata** and **figures** folder. Move all the data to the **rawdata** folder.

Use the function ´setwd()´ to select the current working directory of the **R** processes.

Use ´install.packages()´ to install necessary libraries and ´library()´ to load the package. You need to install the packages once in your installation life time but ´library()´ must be run every new session.

```{r}
#setting working direectory
setwd("~/Documents/github/coding_club/")

#install.packages("tidyverse")
library(tidyverse)
```

You can add options to executable code like this

```{r}
#| warning: false

counts <- read_tsv("raw_data/feature-table_ampli.tsv")

taxonomy <- read_tsv("raw_data/taxonomy_ampli.tsv")

metadata <-  read_tsv("raw_data/weight_ph_data.txt")
```

## Clean taxonomy file

We need to

```{r}
#| warning: false
taxonomy <- read_tsv("raw_data/taxonomy_ampli.tsv") %>% 
  rename(OTUID='Feature ID') %>%
  separate(Taxon,
           into=c("superkingdom", "phylum", "class", "order", "family", "genus", "species"),
           sep = ";")

head(taxonomy)
```

## Pivot the data and add metadata

```{r}
#| warning: false
mean_rel <- counts %>% 
  pivot_longer(-OTUID,
               names_to = "sample",
               values_to = "counts") %>%
  inner_join(metadata, by=c("sample"="Sample")) %>% 
  select(OTUID, sample, counts, Day)

head(mean_rel)
```

## Taxonomy and relative abundance

```{r}
#| warning: false

mean_rel <- mean_rel %>% 
  inner_join(taxonomy, by="OTUID") %>% 
  group_by(sample, Day, phylum) %>% 
  summarise(counts=sum(counts),
            .groups = "drop") %>% 
  group_by(sample) %>% 
  mutate(rel_abund = 100*(counts/sum(counts))) %>% 
  group_by(Day, phylum) %>%
  summarise(mean_rel =mean(rel_abund),
            .groups = "drop")
```

## Taxon pooling

```{r}
#| warning: false

taxon_pool <- mean_rel %>%
  group_by(phylum) %>%
  summarise(pool = max(mean_rel) < 5,
            mean=mean(mean_rel),
            .groups = "drop")  

head(taxon_pool)
```

## Organized taxon by abundance

```{r}
pool_mean_rel <- inner_join(taxon_pool, mean_rel, by="phylum") %>%
  mutate(phylum=if_else(pool, "Other", phylum)) %>%
  group_by(Day, phylum) %>%
  summarise(mean_rel=sum(mean_rel),
            mean =sum(mean),
            .groups ="drop") %>%
  mutate(genus=factor(phylum),
         genus=fct_reorder(phylum, mean,
                           .desc = TRUE))
```

## Select colors for barplot

[Color Brewer](https://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3)

```{r}
bar_colors <- c('#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462',
                '#b3de69','#fccde5','#d9d9d9','#bc80bd')
```

## Barplot

```{r}

  pool_mean_rel %>% 
    ggplot(aes(x=factor(Day,
                      levels = c(0,2,4,8,15,40)),
             y=mean_rel,
             fill=phylum)) +
  geom_col() +
  scale_y_continuous(expand = c(0,0)) +
  scale_fill_manual(values=bar_colors) + 
  labs(x="Day",
       y="Relative abundance (%)") +
  theme_classic() +
  theme(legend.title = element_blank(),
        legend.text = element_text(face = "italic"),
        axis.text = element_text(size = 14),
        axis.title = element_text(size = 15))
```
